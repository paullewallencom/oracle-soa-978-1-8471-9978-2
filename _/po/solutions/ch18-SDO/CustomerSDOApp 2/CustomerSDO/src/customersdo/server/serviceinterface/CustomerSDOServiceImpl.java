package customersdo.server.serviceinterface;

import customersdo.common.CustomersViewSDO;
import customersdo.common.serviceinterface.CustomerSDOService;

import java.lang.reflect.Method;

import java.util.List;

import javax.ejb.Remote;
import javax.ejb.Stateless;

import oracle.jbo.common.Diagnostic;
import oracle.jbo.common.sdo.SDOHelper;
import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.common.service.types.ProcessControl;
import oracle.jbo.common.service.types.ProcessData;
import oracle.jbo.server.svc.ServiceImpl;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;

import weblogic.javaee.CallByReference;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 15 11:49:03 PDT 2009
// ---------------------------------------------------------------------
@Stateless(name="customersdo.common.CustomerSDOServiceBean", mappedName="CustomerSDOServiceBean")
@Remote(CustomerSDOService.class)
@PortableWebService(targetNamespace="/customersdo/common/", serviceName="CustomerSDOService",
    portName="CustomerSDOServiceSoapHttpPort", endpointInterface="customersdo.common.serviceinterface.CustomerSDOService")
@CallByReference
public class CustomerSDOServiceImpl extends ServiceImpl implements CustomerSDOService {
    private static boolean _isInited = false;

    /**
     * This is the default constructor (do not remove).
     */
    public CustomerSDOServiceImpl() {
        init();
        setApplicationModuleDefName("customersdo.CustomerSDOAppModule");
        setConfigurationName("CustomerSDOService");
    }

    /**
     * Generated method. Do not modify. Do initialization in the constructor
     */
    protected void init() {
        if (_isInited) {
            return;
        }
        synchronized (CustomerSDOServiceImpl.class) {
            if (_isInited) {
                return;
            }
            try {
                SDOHelper.INSTANCE.defineSchema("customersdo/common/serviceinterface/", "CustomerSDOService.xsd");
                _isInited = true;
            } catch (Exception ex) {
                Diagnostic.printStackTrace(ex);
            }
        }
    }

    /**
     * getCustomersView1: generated method. Do not modify.
     */
    public CustomersViewSDO getCustomersView1(String customerId) throws ServiceException {
        return (CustomersViewSDO)get(new Object[] { customerId },
                                     "CustomersView1", CustomersViewSDO.class);
    }

    /**
     * createCustomersView1: generated method. Do not modify.
     */
    public CustomersViewSDO createCustomersView1(CustomersViewSDO customersView1) throws ServiceException {
        return (CustomersViewSDO)create(customersView1, "CustomersView1");
    }

    /**
     * updateCustomersView1: generated method. Do not modify.
     */
    public CustomersViewSDO updateCustomersView1(CustomersViewSDO customersView1) throws ServiceException {
        return (CustomersViewSDO)update(customersView1, "CustomersView1");
    }

    /**
     * deleteCustomersView1: generated method. Do not modify.
     */
    public void deleteCustomersView1(CustomersViewSDO customersView1) throws ServiceException {
        delete(customersView1, "CustomersView1");
    }

    /**
     * mergeCustomersView1: generated method. Do not modify.
     */
    public CustomersViewSDO mergeCustomersView1(CustomersViewSDO customersView1) throws ServiceException {
        return (CustomersViewSDO)merge(customersView1, "CustomersView1");
    }

    /**
     * findCustomersView1: generated method. Do not modify.
     */
    public List<CustomersViewSDO> findCustomersView1(FindCriteria findCriteria,
                                                     FindControl findControl) throws ServiceException {
        return (List<CustomersViewSDO>)find(findCriteria, findControl,
                                            "CustomersView1",
                                            CustomersViewSDO.class);
    }

    /**
     * processCustomersView1: generated method. Do not modify.
     */
    public List<CustomersViewSDO> processCustomersView1(String changeOperation,
                                                        List<CustomersViewSDO> customersView1,
                                                        ProcessControl processControl) throws ServiceException {
        return (List<CustomersViewSDO>)process(changeOperation, processControl,
                                               customersView1,
                                               "CustomersView1");
    }

    /**
     * processCSCustomersView1: generated method. Do not modify.
     */
    public ProcessData processCSCustomersView1(ProcessData processData,
                                               ProcessControl processControl) throws ServiceException {
        return processChangeSummary(processData, processControl, "CustomersView1");
    }
}
